server.port=7517
server.error.path=/user/error
server.error.whitelabel.enabled=false 
 # This is correct, ensure 'false' or 'true' is used, not any other value.

# Data Source Configuration (PostgreSQL)
spring.datasource.url=jdbc:postgresql://database-1.cbosms8quwa6.ap-south-1.rds.amazonaws.com:5432/cantactDb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.properties.hibernate.format_sql=true

# Servlet Multipart Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

# MVC Configuration
spring.mvc.throw-exception-if-no-handler-found=true
spring.mvc.async.request-timeout=3600000

# Spring Boot Actuator Configuration for Metrics and Monitoring
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Configure logging (optional)
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.file.name=logs/application.log

# Enable Prometheus endpoint for metrics scraping (required for Prometheus server to scrape metrics)
management.metrics.export.prometheus.rsocket.enabled=false
management.metrics.export.prometheus.step=60s
